<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VinoVault - Discover Your Perfect Wine</title>
    <link rel="stylesheet" href="/styles/index.css">
    <link rel="stylesheet" href="/styles/header.css">
    <link rel="stylesheet" href="/styles/search.css">
    <link rel="stylesheet" href="/styles/auth.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <%- include('./partials/header') %>
    <%- include('./partials/nav') %>
    <main class="search-container">
        <h2 class="section-title">Uncork Your Perfect Wine</h2>
        <div id="searchBar">
            <input type="text" id="searchInput" placeholder="Start Your Search Here">
            <select id="databaseSelect">
                <option value="postgres">PostgreSQL</option>
                <option value="mongodb">MongoDB</option>
            </select>
            <button id="searchButton" onclick="performSearch()">Search</button>
        </div>

        <h3 class="section-title">Not sure where to start? Narrow your search:</h3>
        <div class="filter-row">
            <div class="filter-group">
                <select id="countryFilter">
                    <option value="">Select a Country</option>
                    <% countries.forEach(country => { %>
                        <option value="<%= country %>"><%= country %></option>
                    <% }); %>
                </select>
                <button onclick="filterByCountry()">Explore by Country</button>
            </div>
            <div class="filter-group">
                <select id="colorFilter">
                    <option value="">Select a Color</option>
                    <% colors.forEach(color => { %>
                        <option value="<%= color %>"><%= color %></option>
                    <% }); %>
                </select>
                <button onclick="filterByColor()">Discover by Color</button>
            </div>
            <div class="filter-group">
                <select id="typeFilter">
                    <option value="">Select a Type</option>
                    <% types.forEach(type => { %>
                        <option value="<%= type %>"><%= type %></option>
                    <% }); %>
                </select>
                <button onclick="filterByType()">Find by Type</button>
            </div>
        </div>

        <h2 class="section-title">Your Curated Wine Selection</h2>
        <div id="searchResults"></div>
    </main>

    <script>
        function performSearch() {
            const keyword = document.getElementById('searchInput').value;
            const database = document.getElementById('databaseSelect').value;
            console.log('Sending search request:', { keyword, database });

            if (!keyword.trim()) {
                console.error('Search keyword is empty');
                alert('Please enter a search term');
                return;
            }

            fetch('/search', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ keyword, database })
            })
            .then(response => response.json())
            .then(results => {
                console.log('Received search results:', results);
                displayResults(results);
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred during the search. Please try again.');
            });
        }

        function filterByCountry() {
            filterBy('country', document.getElementById('countryFilter').value);
        }

        function filterByColor() {
            filterBy('color', document.getElementById('colorFilter').value);
        }

        function filterByType() {
            filterBy('type', document.getElementById('typeFilter').value);
        }

        function filterBy(filterType, filterValue) {
            console.log('Applying filter:', { filterType, filterValue });

            if (!filterValue.trim()) {
                console.error('Filter value is empty');
                alert('Please select a filter value');
                return;
            }

            fetch('/search/filter', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ filterType, filterValue })
            })
            .then(response => response.json())
            .then(results => {
                console.log('Received filter results:', results);
                displayResults(results);
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred during filtering. Please try again.');
            });
        }

        function displayResults(results) {
            const resultsDiv = document.getElementById('searchResults');
            resultsDiv.innerHTML = '';
            if (results.length === 0) {
                resultsDiv.innerHTML = '<p>No results found.</p>';
                return;
            }
            results.forEach(wine => {
                const wineCard = document.createElement('div');
                wineCard.classList.add('wine-card');
                
                const wineImage = document.createElement('img');
                wineImage.src = wine.logo || wine.Logo || '/images/coming-soon.png';
                wineImage.alt = `${wine.winery || wine.Winery} logo`;
                wineImage.classList.add('wine-logo');
                
                const wineInfo = document.createElement('div');
                wineInfo.classList.add('wine-info');
                
                wineInfo.innerHTML = `
                    <h3>${wine.name || wine.Name}</h3>
                    <p><strong>Winery:</strong> ${wine.winery || wine.Winery}</p>
                    <p><strong>Region:</strong> ${wine.region || wine.Region}</p>
                    <p><strong>Country:</strong> ${wine.country || wine.Country}</p>
                    <p><strong>Type:</strong> ${wine.type || wine.Type}</p>
                    <p><strong>Color:</strong> ${wine.color || wine.Color}</p>
                    <p><strong>Price:</strong> $${parseFloat(wine.price || wine.Price).toFixed(2)}</p>
                    <p><strong>Rating:</strong> ${wine.rating || wine.Rating}/5</p>
                    <p>${wine.description || wine.Description}</p>
                `;

                const buttonContainer = document.createElement('div');
                buttonContainer.classList.add('button-container');

                const addToVaultButton = document.createElement('button');
                addToVaultButton.textContent = 'Add to Vault';
                addToVaultButton.classList.add('button');
                const wineId = wine._id ? (wine._id.$oid || wine._id) : wine.wineid || wine.WineID;
                const source = wine._id ? 'mongodb' : 'postgres';
                addToVaultButton.onclick = () => addToVault(wineId, source);

                const viewReviewsButton = document.createElement('a');
                viewReviewsButton.href = `/reviews/${wineId}`;
                viewReviewsButton.classList.add('button');
                viewReviewsButton.textContent = 'View Reviews';

                buttonContainer.appendChild(addToVaultButton);
                buttonContainer.appendChild(viewReviewsButton);

                wineInfo.appendChild(buttonContainer);

                wineCard.appendChild(wineImage);
                wineCard.appendChild(wineInfo);

                resultsDiv.appendChild(wineCard);
            });
        }

        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }

        function addToVault(wineId, source) {
            const token = getCookie('token');
            fetch(`/vault/add/${wineId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}` // Ensure the token is set
                },
                body: JSON.stringify({ source: source })
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => { throw err; });
                }
                return response.json();
            })
            .then(data => {
                console.log('Wine added to vault:', data);
                alert('Wine added to your vault successfully!');
            })
            .catch(error => {
                console.error('Error adding wine to vault:', error);
                alert(`Error adding wine to vault: ${error.message || 'Unknown error'}`);
            });
        }
    </script>

    <%- include('./partials/footer') %>
</body>
</html>
